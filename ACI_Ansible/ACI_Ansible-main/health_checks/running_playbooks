
$source ADP/bin/activate

(ADP)$cd GVE_DevNet_ACI_Ansible-Dashboard
(ADP)$ cd project

hosts.yaml <<<< Can leverage however we are leveraging invnetory file for hosts, username and password variables

/variables/variables.yaml file is used for variable reference form theplaybook below frm the following line in playbook:

 vars_files:
    - ~/ADP/GVE_DevNet_ACI-Ansible-Dashboard/variables/variables.yaml

 



To run the playbook:



(ADP) petthomp@CSCO-W-PF2WKHPF:~/ADP/GVE_DevNet_ACI-Ansible-Dashboard/project$ ansible-playbook -i inventory setup_app_profile_task01-13.yaml





playbook file:


(ADP) petthomp@CSCO-W-PF2WKHPF:~/ADP/GVE_DevNet_ACI-Ansible-Dashboard/project$ more setup_app_profile_task01-13.yaml
---

# ansible-playbook setup_app_profile.yaml -e 'host=dcloud'
- name: ENSURE APPLICATION CONFIGURATION EXISTS
  hosts: "*apic1"
  connection: local
  gather_facts: False
  vars:
    login_info: &login_info
      host: "{{ aci_hostname }}"
      username: "{{ aci_username }}"
      password: "{{ aci_password }}"
      validate_certs: False

  vars_files:
    - ~/ADP/GVE_DevNet_ACI-Ansible-Dashboard/variables/variables.yaml

  tasks:
    - name: TASK 01 - ENSURE APPLICATIONS TENANT EXISTS
      cisco.aci.aci_tenant:
        <<: *login_info
        state: "present"
        tenant: "{{ tenant }}"
        descr: "Tenant Created Using Ansible"
      tags: tenant, vrf, bd, filter, contract, app, epg

    - name: TASK 02 - ENSURE TENANT VRF EXISTS
      cisco.aci.aci_vrf:
        <<: *login_info
        state: "present"
        tenant: "{{ tenant }}"
        vrf: "{{ vrf }}"
        descr: "VRF Created Using Ansible"
      tags: vrf, bd

    - name: TASK 03 - ENSURE TENANT BRIDGE DOMAINS AND EXIST
      cisco.aci.aci_bd:
        <<: *login_info
        state: "present"
        tenant: "{{ tenant }}"
        #bd: "{{ item.bd }}"
        bd: "{{ item.bd }}"
        vrf: "{{ vrf }}"
      with_items: "{{ bridge_domains }}"
      tags: bd

    - name: TASK 04 - ENSURE BRIDGE DOMAINS HAVE SUBNETS
      cisco.aci.aci_bd_subnet:
        <<: *login_info
        state: "present"
        tenant: "{{ tenant }}"
        bd: "{{ item.bd }}"
        gateway: "{{ item.gateway }}"
        mask: "{{ item.mask }}"
        scope: "{{ item.scope }}"
      with_items: "{{ bridge_domains }}"

    - name: TASK 05 - ENSURE TENANT FILTERS EXIST
      cisco.aci.aci_filter:
        <<: *login_info
        state: "present"
        tenant: "{{ tenant }}"
        filter: "{{ item.filter }}"
        descr: "Filter Created Using Ansible"
      with_items: "{{ filters }}"
      tags: filter, contract

    - name: TASK 06 - ENSURE FILTERS HAVE FILTER ENTRIES
      cisco.aci.aci_filter_entry:
        <<: *login_info
        state: "present"
        tenant: "{{ tenant }}"
        filter: "{{ item.filter }}"
        entry: "{{ item.entry }}"
        ether_type: "ip"
        ip_protocol: "{{ item.protocol }}"
        dst_port_start: "{{ item.port }}"
        dst_port_end: "{{ item.port }}"
      with_items: "{{ filters }}"
      tags: filter, contract

    - name: TASK 07 - ENSURE TENANT CONTRACTS EXIST
      cisco.aci.aci_contract:
        <<: *login_info
        state: "present"
        tenant: "{{ tenant }}"
        contract: "{{ item.contract }}"
        scope: "context"
        description: "Contract Created Using Ansible"
      with_items: "{{ contracts }}"
      tags: contract


    - name: TASK 08 - ENSURE CONTRACTS HAVE CONTRACT SUBJECTS
      cisco.aci.aci_contract_subject:
        <<: *login_info
        state: "present"
        tenant: "{{ tenant }}"
        contract: "{{ item.contract }}"
        subject: "{{ item.subject }}"
      with_items: "{{ contracts }}"
      tags: contract

    - name: TASK 09 - ENSURE CONTRACT SUBJECTS HAVE FILTERS
      cisco.aci.aci_contract_subject_to_filter:
        <<: *login_info
        state: "present"
        tenant: "{{ tenant }}"
        contract: "{{ item.contract }}"
        subject: "{{ item.subject }}"
        filter: "{{ item.filter }}"
      with_items: "{{ contracts }}"
      tags: contract]

    - name: TASK 10 - ENSURE APPLICATION EXISTS
      cisco.aci.aci_ap:
        <<: *login_info
        state: "present"
        tenant: "{{ tenant }}"
        ap: "{{ ap }}"
        descr: "App Profile Created Using Ansible"
      tags: app, epg


    - name: TASK 11 - ENSURE APPLICATION EPGS EXISTS
      cisco.aci.aci_epg:
        <<: *login_info
        state: "present"
        tenant: "{{ tenant }}"
        ap: "{{ ap }}"
        epg: "{{ item.epg }}"
        bd: "{{ item.bd }}"
        descr: "EPG Created Using Ansible"
      with_items: "{{ epgs }}"
      tags: epg


    - name: TASK 12 - ENSURE DOMAIN IS BOUND TO EPG
      cisco.aci.aci_epg_to_domain:
        <<: *login_info
        state: "present"
        tenant: "{{ tenant }}"
        ap: "{{ ap }}"
        epg: "{{ item.epg }}"
        domain: "cisco.aci.aci_ansible_lab"
        domain_type: "vmm"
        vm_provider: "vmware"
        encap_mode: "auto"
        encap: "{{ item.encap }}"
      with_items: "{{ epgs }}"
      tags: epg

    - name: TASK 13 - ENSURE EPGS HAVE CONTRACTS
      cisco.aci.aci_epg_to_contract:
        <<: *login_info
        state: "present"
        tenant: "{{ tenant }}"
        ap: "{{ ap }}"
        epg: "{{ item.epg }}"
        contract: "{{ item.contract }}"
        contract_type: "{{ item.contract_type }}"
      with_items: "{{ epg_contracts }}"
      tags: epg

(ADP) petthomp@CSCO-W-PF2WKHPF:~/ADP/GVE_DevNet_ACI-Ansible-Dashboard/project$



varaible.yaml file:

(ADP) petthomp@CSCO-W-PF2WKHPF:~/ADP/GVE_DevNet_ACI-Ansible-Dashboard/variables$ more variables.yaml
---
tenant: "Ansible_pete1"
vrf: "pete1_vrf"
bridge_domains:
  - bd: "pete1_bd"
    gateway: "10.1.100.1"
    mask: "24"
    scope: "public"
ap: "pete1_ap"
epgs:
  - epg: "web"
    bd: "pete1_bd"
    encap: "21"
  - epg: "db"
    bd: "pete1_bd"
    encap: "22"
epg_contracts:
  - epg: "web"
    contract: "web"
    contract_type: "provider"
  - epg: "web"
    contract: "sql"
    contract_type: "consumer"
  - epg: "db"
    contract: "sql"
    contract_type: "provider"
contracts:
  - contract: "web"
    subject: "https"
    filter: "https"
  - contract: "sql"
    subject: "sql"
    filter: "sql"
filters:
  - filter: "https"
    entry: "https"
    protocol: "tcp"
    port: "443"
  - filter: "sql"
    entry: "sql"
    protocol: "tcp"
    port: "1433"

bindings:
  - tenant: "Ansible_pete1"
    ap: "pete1_ap"
    epg: "db"
    vlan: "22"
    intf: "12"
    type: "vpc"
    leaf: "101-102"
  - tenant: "Ansible_pete1"
    ap: "pete1_ap"
    epg: "web"
    vlan: "21"
    intf: "12"
    type: "vpc"
    leaf: "101-102"

(ADP) petthomp@CSCO-W-PF2WKHPF:~/ADP/GVE_DevNet_ACI-Ansible-Dashboard/variables$





































































